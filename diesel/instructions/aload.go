package instructions

import (
	"../runtime"
	"../../utils"
)

type I_aload struct {
}

func init()  {
	INSTRUCTION_MAP[0x19] = &I_aload{}
}

func (s I_aload)Stroke(ctx *runtime.Context) error {
	utils.Log(1, "aload exce >>>>>>>>>\n")

	value, _ := ctx.CurrentAborigines.GetAborigines(uint32(ctx.Code[ctx.PC]))
	ctx.CurrentFrame.PushFrame(value)
	ctx.PC += 1
	return nil
}

func (s I_aload)Test(octx *runtime.Context) *runtime.Context {
	f := new(runtime.Frame)
	f.Depth = 0
	a := new(runtime.Aborigines)
	a.Layers = append(a.Layers, &[]uint32{1234})
	return &runtime.Context{
		Code: []byte{0x0},
		CurrentFrame: f,
		CurrentAborigines: a,
	}
}
/**
======================================================================================
		操作				||		从局部变量表加载一个 reference 类型值到操作数栈中
======================================================================================
						||		aload
						||------------------------------------------------------------
						||		index
						||------------------------------------------------------------
						||		
		格式				||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
======================================================================================
		结构				||		aload = 25(0x19)
======================================================================================
						||		...， →
	   操作数栈			||------------------------------------------------------------
						||		...，objectref
======================================================================================
						||		
						||		index 是一个代表当前栈帧(§2.6)中局部变量表的索引的无符号 byte 类 型整数，
		描述				||		index 作为索引定位的局部变量必须为 reference 类型，
						||		称为objectref。指令执行后，objectref 将会压入到操作数栈栈顶
						||		
======================================================================================
						||		
						||		
						||
	   运行时异常			||
						||		
						||		
						||		
======================================================================================
						||
						||
						||		aload 指令无法被用于加载类型为 returnAddress 类型的数据到操作数栈 中，
		注意				||		这点是特意设计成与 astore 指令不相对称的(astore 指令可以操作returnAddress 类型的数据)。
						||		aload 操作码可以与 wide 指令联合一起实现使用 2 个字节长度的无符号 byte 型数值作为索引来访问局部变量表。
						||
						||
======================================================================================
 */