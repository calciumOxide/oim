package instructions

import (
	"../runtime"
	"../../utils"
	"../oil/types"
				)

type I_goto struct {
}

func init()  {
	INSTRUCTION_MAP[0xa7] = &I_goto{}
}

func (s I_goto)Stroke(ctx *runtime.Context) error {
	utils.Log(1, "goto exce >>>>>>>>>\n")

	offset := (uint16(ctx.Code[ctx.PC]) << 8) | uint16(ctx.Code[ctx.PC + 1])
	ctx.PC += 2
	ctx.PC = uint32(offset)

	return nil
}

func (s I_goto)Test() *runtime.Context {
	f := new(runtime.Frame)
	f.PushFrame(&types.Jarray{
		Reference: []types.Jbyte{1, 2, 3, 4},
	})
	fields := make(map[string]interface{})
	fields["app"] = "bb"
	f.PushFrame(types.Jreference{
		Reference: types.Jobject{
			ClassTypeIndex: 4,
			Fileds: fields,
		},
	})
	a := new(runtime.Aborigines)
	a.Layers = append(a.Layers, &[]uint32{1234})
	return &runtime.Context{
		Code: []byte{0x0, 0x0, 0x8},
		CurrentFrame: f,
		CurrentAborigines: a,
	}
}
/**
======================================================================================
		操作				||		分支跳转
======================================================================================
						||		goto
						||------------------------------------------------------------
						||		branchbyte1
						||------------------------------------------------------------
						||		branchbyte2
		格式				||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
======================================================================================
		结构				||		goto = 167(0xa7)
======================================================================================
						||		...， →   无改变
	   操作数栈			||------------------------------------------------------------
						||		...， →
======================================================================================
						||		
						||		无符号 byte 型数据 branchbyte1 和 branchbyte2 用于构建一个 16 位有 符号的分支偏移量，构建方式为(branchbyte1 << 8)| branchbyte2。
		描述				||		指令执行后，程序将会转到这个 goto 指令之后的，由上述偏移量确定的目标 地址上继续执行。这个目标地址必须处于 goto 指令所在的方法之中。
						||
======================================================================================
						||		
						||
						||
	   链接时异常			||
						||		
						||		
						||		
======================================================================================
						||
						||
						||
	   运行时异常			||
						||
						||
						||
======================================================================================
						||
						||
						||
		注意				||
						||
						||
						||
======================================================================================
 */