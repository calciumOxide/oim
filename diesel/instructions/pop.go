package instructions

import (
	"../runtime"
	"../../utils"
	"../../types"
		)

type I_pop struct {
}

func init()  {
	INSTRUCTION_MAP[0x57] = &I_pop{}
}

func (s I_pop)Stroke(ctx *runtime.Context) error {
	utils.Log(1, "pop exce >>>>>>>>>\n")
	ctx.CurrentFrame.PopFrame()
	return nil
}

func (s I_pop)Test(octx *runtime.Context) *runtime.Context {
	f := new(runtime.Frame)
	f.PushFrame(&types.Jarray{
		Reference: []types.Jbyte{1, 2, 3, 4},
	})
	f.PushFrame(types.Jfloat(9.123456789012345))
	f.PushFrame(types.Jint(9))
	a := new(runtime.Aborigines)
	a.Layers = append(a.Layers, &[]uint32{1234})
	return &runtime.Context{
		Code: []byte{0x0},
		CurrentFrame: f,
		CurrentAborigines: a,
	}
}
/**
======================================================================================
		操作				||		将操作数栈的栈顶元素出栈
======================================================================================
						||		pop
						||------------------------------------------------------------
						||
						||------------------------------------------------------------
						||		
		格式				||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
======================================================================================
		结构				||		pop = 87(0x57)
======================================================================================
						||		...，value →
	   操作数栈			||------------------------------------------------------------
						||		...，
======================================================================================
						||
		描述				||		将操作数栈的栈顶元素出栈。
pop 指令只能用来操作(§2.11.1)中定义的分类一的运算类型。
						||
======================================================================================
						||		
						||
						||
	   运行时异常			||
						||		
						||		
						||		
======================================================================================
						||
						||
						||
		注意				||
						||
						||
						||
======================================================================================
 */