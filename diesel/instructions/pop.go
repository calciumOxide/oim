package instructions

import (
	"../runtime"
	"../../utils"
	"../../types"
		)

type I_nop struct {
}

func init()  {
	INSTRUCTION_MAP[0x74] = &I_nop{}
}

func (s I_nop)Stroke(ctx *runtime.Context) error {
	utils.Log(1, "nop exce >>>>>>>>>\n")
	
	return nil
}

func (s I_nop)Test(octx *runtime.Context) *runtime.Context {
	f := new(runtime.Frame)
	f.PushFrame(&types.Jarray{
		Reference: []types.Jbyte{1, 2, 3, 4},
	})
	f.PushFrame(types.Jfloat(9.123456789012345))
	f.PushFrame(types.Jint(9))
	a := new(runtime.Aborigines)
	a.Layers = append(a.Layers, &[]uint32{1234})
	return &runtime.Context{
		Code: []byte{0x0},
		CurrentFrame: f,
		CurrentAborigines: a,
	}
}
/**
======================================================================================
		操作				||		什么事情都不做
======================================================================================
						||		nop
						||------------------------------------------------------------
						||
						||------------------------------------------------------------
						||		
		格式				||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
						||------------------------------------------------------------
						||		
======================================================================================
		结构				||		nop = 0(0x0)
======================================================================================
						||		...， →
	   操作数栈			||--------------------无变化-----------------------------------
						||		...，
======================================================================================
						||
		描述				||		什么事情都不做
						||
======================================================================================
						||		
						||
						||
	   运行时异常			||
						||		
						||		
						||		
======================================================================================
						||
						||
						||
		注意				||
						||
						||
						||
======================================================================================
 */